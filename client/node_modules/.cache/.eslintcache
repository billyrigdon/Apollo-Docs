[{"/mnt/Data/Code/Auri-Docs/client/src/Tests/reportWebVitals.js":"1","/mnt/Data/Code/Auri-Docs/client/src/Components/App.jsx":"2","/mnt/Data/Code/Auri-Docs/client/src/Components/PrivateRoute.jsx":"3","/mnt/Data/Code/Auri-Docs/client/src/Screens/Login.jsx":"4","/mnt/Data/Code/Auri-Docs/client/src/Screens/Auri.jsx":"5","/mnt/Data/Code/Auri-Docs/client/src/Components/Loading.jsx":"6","/mnt/Data/Code/Auri-Docs/client/src/Components/Error.jsx":"7","/mnt/Data/Code/Auri-Docs/client/src/Components/Topbar.jsx":"8","/mnt/Data/Code/Auri-Docs/client/src/Screens/Backups.jsx":"9","/mnt/Data/Code/Auri-Docs/client/src/Components/Navbar.jsx":"10","/mnt/Data/Code/Auri-Docs/client/src/Screens/Companies.jsx":"11","/mnt/Data/Code/Auri-Docs/client/src/Screens/Applications.jsx":"12","/mnt/Data/Code/Auri-Docs/client/src/Screens/Articles.jsx":"13","/mnt/Data/Code/Auri-Docs/client/src/Screens/Networks.jsx":"14","/mnt/Data/Code/Auri-Docs/client/src/Screens/Email.jsx":"15","/mnt/Data/Code/Auri-Docs/client/src/Screens/Servers.jsx":"16","/mnt/Data/Code/Auri-Docs/client/src/Screens/Shares.jsx":"17","/mnt/Data/Code/Auri-Docs/client/src/index.jsx":"18"},{"size":362,"mtime":1644942271704,"results":"19","hashOfConfig":"20"},{"size":696,"mtime":1644950574139,"results":"21","hashOfConfig":"20"},{"size":536,"mtime":1644949210542,"results":"22","hashOfConfig":"20"},{"size":2231,"mtime":1644955631806,"results":"23","hashOfConfig":"20"},{"size":31274,"mtime":1644966782003,"results":"24","hashOfConfig":"20"},{"size":460,"mtime":1644942271704,"results":"25","hashOfConfig":"20"},{"size":264,"mtime":1644942271704,"results":"26","hashOfConfig":"20"},{"size":690,"mtime":1644946302721,"results":"27","hashOfConfig":"20"},{"size":2913,"mtime":1644946931818,"results":"28","hashOfConfig":"20"},{"size":1526,"mtime":1644946215001,"results":"29","hashOfConfig":"20"},{"size":2628,"mtime":1644946556630,"results":"30","hashOfConfig":"20"},{"size":1398,"mtime":1644948840452,"results":"31","hashOfConfig":"20"},{"size":3756,"mtime":1644971232654,"results":"32","hashOfConfig":"20"},{"size":5485,"mtime":1644947254337,"results":"33","hashOfConfig":"20"},{"size":971,"mtime":1644946972371,"results":"34","hashOfConfig":"20"},{"size":1678,"mtime":1644948584132,"results":"35","hashOfConfig":"20"},{"size":1266,"mtime":1644947157751,"results":"36","hashOfConfig":"20"},{"size":473,"mtime":1644954397735,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1km1s5x",{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/Data/Code/Auri-Docs/client/src/Tests/reportWebVitals.js",[],"/mnt/Data/Code/Auri-Docs/client/src/Components/App.jsx",[],"/mnt/Data/Code/Auri-Docs/client/src/Components/PrivateRoute.jsx",[],"/mnt/Data/Code/Auri-Docs/client/src/Screens/Login.jsx",[],"/mnt/Data/Code/Auri-Docs/client/src/Screens/Auri.jsx",["75"],"import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport $ from \"jquery\";\nimport Navbar from \"../Components/Navbar\";\nimport Topbar from \"../Components/Topbar\";\nimport Applications from \"./Applications\";\nimport Articles from \"./Articles\";\nimport Backups from \"./Backups\";\nimport Companies from \"./Companies\";\nimport Email from \"./Email\";\nimport Networks from \"./Networks\";\nimport Servers from \"./Servers\";\nimport Shares from \"./Shares\";\n\n/********************************************************************************\nATTENTION: This is trash. I was just learning react for the first time when\nI wrote this and didn't separate this into multiple files like I should have\nor use any kind of state management.This project isn't even worth looking at. \nSeriously. If you're going to browse my code, I recommend checking out one \nof my newer projects like Shulgin or RigdonOS. I'm sure I'll be embarassed \nof them too, but at least it's better than this.\n**********************************************************************************/\n\n//Parent Component\nclass Auri extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tuserEmail: localStorage.getItem(\"email\"),\n\t\t\tuserToken: localStorage.getItem(\"token\"),\n\t\t\tnav: \"companies\",\n\t\t\tcompanyList: [],\n\t\t\tcompanyName: \"\",\n\t\t\tnewCompany: \"\",\n\t\t\tnewName: \"\",\n\t\t\taddress: \"\",\n\t\t\tnewAddress: \"\",\n\t\t\temailAddr: \"\",\n\t\t\tnewEmailAddr: \"\",\n\t\t\tphone: \"\",\n\t\t\tnewPhone: \"\",\n\t\t\tarticles: [],\n\t\t\tapps: [],\n\t\t\tselectedApp: {},\n\t\t\tupdatedApp: {},\n\t\t\tupdatedAppName: \"\",\n\t\t\tupdatedAppInstaller: \"\",\n\t\t\tupdatedAppNotes: \"\",\n\t\t\tbackups: {\n\t\t\t\toffsiteTechnology: \"\",\n\t\t\t\toffsiteWindow: \"\",\n\t\t\t\toffsiteFrequency: \"\",\n\t\t\t\toffsiteDescription: \"\",\n\t\t\t\toffsiteLocation: \"\",\n\t\t\t\tlocalTechnology: \"\",\n\t\t\t\tlocalWindow: \"\",\n\t\t\t\tlocalFrequency: \"\",\n\t\t\t\tlocalDescription: \"\",\n\t\t\t\tlocalLocation: \"\",\n\t\t\t},\n\t\t\tnewOffsiteTechnology: \"\",\n\t\t\tnewOffsiteWindow: \"\",\n\t\t\tnewOffsiteFrequency: \"\",\n\t\t\tnewOffsiteDescription: \"\",\n\t\t\tnewOffsiteLocation: \"\",\n\t\t\tnewLocalTechnology: \"\",\n\t\t\tnewLocalWindow: \"\",\n\t\t\tnewLocalFrequency: \"\",\n\t\t\tnewLocalDescription: \"\",\n\t\t\tnewLocalLocation: \"\",\n\t\t\temail: {\n\t\t\t\tplatform: \"\",\n\t\t\t\twebmail: \"\",\n\t\t\t\temailServer: \"\",\n\t\t\t\tdomains: \"\",\n\t\t\t},\n\t\t\tnewEmailPlatform: \"\",\n\t\t\tnewEmailWebmail: \"\",\n\t\t\tnewEmailServer: \"\",\n\t\t\tnewEmailDomains: \"\",\n\t\t\tshareServer: \"\",\n\t\t\tshareRootPath: \"\",\n\t\t\tshareOnPrem: false,\n\t\t\tshareDriveLetters: \"\",\n\t\t\tdns: \"\",\n\t\t\tddns: \"\",\n\t\t\tsubnet: \"\",\n\t\t\tpublic: \"\",\n\t\t\tgateway: \"\",\n\t\t\tdomainController: \"\",\n\t\t\tdhcpServer: \"\",\n\t\t\tdhcpScope: \"\",\n\t\t\trouterSubnet: \"\",\n\t\t\trouterIpAddr: \"\",\n\t\t\trouterDhcp: false,\n\t\t\trouterPortForwards: \"\",\n\t\t\trouterNotes: \"\",\n\t\t\trouterVpn: \"\",\n\t\t\twirelessSsid: \"\",\n\t\t\twirelessEncryption: \"\",\n\t\t\twirelessMgmtURL: \"\",\n\t\t\tvpnType: \"\",\n\t\t\tvpnPskLocation: \"\",\n\t\t\tvpnPublicIP: \"\",\n\t\t\tvpnClient: \"\",\n\t\t\tservers: [],\n\t\t\tselectedServer: {},\n\t\t\tupdatedServer: {},\n\t\t\tupdatedServerHostname: \"\",\n\t\t\tupdatedServerRole: \"\",\n\t\t\tupdatedServerIP: \"\",\n\t\t\tupdatedServerNotes: \"\",\n\t\t};\n\n\t\tthis.fetchCompany = this.fetchCompany.bind(this);\n\t\tthis.selectCompany = this.selectCompany.bind(this);\n\t\tthis.changeNav = this.changeNav.bind(this);\n\t\tthis.fetchAllCompanies = this.fetchAllCompanies.bind(this);\n\t\tthis.handleNameChange = this.handleNameChange.bind(this);\n\t\tthis.deleteCompany = this.deleteCompany.bind(this);\n\t\tthis.createCompany = this.createCompany.bind(this);\n\t\tthis.handleNewCompanyChange = this.handleNewCompanyChange.bind(this);\n\t\tthis.handleAddressChange = this.handleAddressChange.bind(this);\n\t\tthis.handleEmailChange = this.handleEmailChange.bind(this);\n\t\tthis.handlePhoneChange = this.handlePhoneChange.bind(this);\n\t\tthis.selectApp = this.selectApp.bind(this);\n\t\tthis.deleteApp = this.deleteApp.bind(this);\n\t\tthis.handleAppNameChange = this.handleAppNameChange.bind(this);\n\t\tthis.handleAppInstallerChange =\n\t\t\tthis.handleAppInstallerChange.bind(this);\n\t\tthis.handleAppNotesChange = this.handleAppNotesChange.bind(this);\n\t\tthis.updateApp = this.updateApp.bind(this);\n\t\tthis.createNewApp = this.createNewApp.bind(this);\n\t\tthis.handleBackupOTChange = this.handleBackupOTChange.bind(this);\n\t\tthis.handleBackupODChange = this.handleBackupODChange.bind(this);\n\t\tthis.handleBackupOFChange = this.handleBackupOFChange.bind(this);\n\t\tthis.handleBackupOLChange = this.handleBackupOLChange.bind(this);\n\t\tthis.handleBackupOWChange = this.handleBackupOWChange.bind(this);\n\t\tthis.handleBackupLDChange = this.handleBackupLDChange.bind(this);\n\t\tthis.handleBackupLFChange = this.handleBackupLFChange.bind(this);\n\t\tthis.handleBackupLLChange = this.handleBackupLLChange.bind(this);\n\t\tthis.handleBackupLTChange = this.handleBackupLTChange.bind(this);\n\t\tthis.handleBackupLWChange = this.handleBackupLWChange.bind(this);\n\t\tthis.updateBackup = this.updateBackup.bind(this);\n\t\tthis.updateCompanyInfo = this.updateCompanyInfo.bind(this);\n\t\tthis.updateEmail = this.updateEmail.bind(this);\n\t\tthis.handleEmailPlatformChange =\n\t\t\tthis.handleEmailPlatformChange.bind(this);\n\t\tthis.handleEmailDomainsChange =\n\t\t\tthis.handleEmailDomainsChange.bind(this);\n\t\tthis.handleEmailServerChange = this.handleEmailServerChange.bind(this);\n\t\tthis.handleEmailWebmailChange =\n\t\t\tthis.handleEmailWebmailChange.bind(this);\n\t\tthis.handleShareChange = this.handleShareChange.bind(this);\n\t\tthis.updateShares = this.updateShares.bind(this);\n\t\tthis.handleCheckChange = this.handleCheckChange.bind(this);\n\t\tthis.updateNetworks = this.updateNetworks.bind(this);\n\t\tthis.handleNetworksChange = this.handleNetworksChange.bind(this);\n\t\tthis.handleRouterDhcpChange = this.handleRouterDhcpChange.bind(this);\n\t\tthis.updateServer = this.updateServer.bind(this);\n\t\tthis.deleteServer = this.deleteServer.bind(this);\n\t\tthis.selectServer = this.selectServer.bind(this);\n\t\tthis.handleServerChange = this.handleServerChange.bind(this);\n\t\tthis.createNewServer = this.createNewServer.bind(this);\n\t}\n\n\tfetchCompany = async () => {\n\t\tif (this.state.companyName !== \"\") {\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: { \"Content-type\": \"application/json\" },\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tcompany: this.state.companyName,\n\t\t\t\t\temail: this.state.userEmail,\n\t\t\t\t\ttoken: this.state.userToken,\n\t\t\t\t}),\n\t\t\t};\n\n\t\t\tfetch(\n\t\t\t\t\"http://45.33.126.222:1944/api/companies/get/\" +\n\t\t\t\t\tthis.state.companyName,\n\t\t\t\trequestOptions\n\t\t\t)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((res) =>\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\taddress: res.address,\n\t\t\t\t\t\temailAddr: res.emailAddr,\n\t\t\t\t\t\tphone: res.phone,\n\t\t\t\t\t\tnewAddress: res.address,\n\t\t\t\t\t\tnewEmailAddr: res.emailAddr,\n\t\t\t\t\t\tnewPhone: res.phone,\n\t\t\t\t\t\tnewName: res.name,\n\t\t\t\t\t\tapps: res.apps,\n\t\t\t\t\t\tbackups: res.backups,\n\t\t\t\t\t\tnewOffsiteTechnology: res.backups.offsiteTechnology,\n\t\t\t\t\t\tnewOffsiteWindow: res.backups.offsiteWindow,\n\t\t\t\t\t\tnewOffsiteFrequency: res.backups.offsiteFrequency,\n\t\t\t\t\t\tnewOffsiteDescription: res.backups.offsiteDescription,\n\t\t\t\t\t\tnewOffsiteLocation: res.backups.offsiteLocation,\n\t\t\t\t\t\tnewLocalTechnology: res.backups.localTechnology,\n\t\t\t\t\t\tnewLocalWindow: res.backups.localWindow,\n\t\t\t\t\t\tnewLocalFrequency: res.backups.localFrequency,\n\t\t\t\t\t\tnewLocalDescription: res.backups.localDescription,\n\t\t\t\t\t\tnewLocalLocation: res.backups.localLocation,\n\t\t\t\t\t\temail: {\n\t\t\t\t\t\t\tplatform: res.email.platform,\n\t\t\t\t\t\t\twebmail: res.email.webmail,\n\t\t\t\t\t\t\tserver: res.email.server,\n\t\t\t\t\t\t\tdomains: res.email.domains,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnewEmailWebmail: res.email.webmail,\n\t\t\t\t\t\tnewEmailServer: res.email.server,\n\t\t\t\t\t\tnewEmailPlatform: res.email.platform,\n\t\t\t\t\t\tnewEmailDomains: res.email.domains,\n\t\t\t\t\t\tshareServer: res.fileShares.server,\n\t\t\t\t\t\tshareOnPrem: res.fileShares.onPrem,\n\t\t\t\t\t\tshareRootPath: res.fileShares.rootPath,\n\t\t\t\t\t\tshareDriveLetters: res.fileShares.driveLetters,\n\t\t\t\t\t\tdns: res.networks.dns,\n\t\t\t\t\t\tddns: res.networks.ddns,\n\t\t\t\t\t\tsubnet: res.networks.subnet,\n\t\t\t\t\t\tpublic: res.networks.public,\n\t\t\t\t\t\tgateway: res.networks.gateway,\n\t\t\t\t\t\tdomainController: res.networks.domainController,\n\t\t\t\t\t\tdhcpServer: res.networks.dhcpServer,\n\t\t\t\t\t\tdhcpScope: res.networks.dhcpScope,\n\t\t\t\t\t\trouterSubnet: res.networks.router.subnet,\n\t\t\t\t\t\trouterIpAddr: res.networks.router.ipAddr,\n\t\t\t\t\t\trouterDhcp: res.networks.router.dhcp,\n\t\t\t\t\t\trouterPortForwards: res.networks.router.portForwards,\n\t\t\t\t\t\trouterNotes: res.networks.router.notes,\n\t\t\t\t\t\trouterVpn: res.networks.router.vpn,\n\t\t\t\t\t\twirelessSsid: res.networks.wireless.ssid,\n\t\t\t\t\t\twirelessEncryption: res.networks.wireless.encryption,\n\t\t\t\t\t\twirelessMgmtURL: res.networks.wireless.mgmtURL,\n\t\t\t\t\t\tvpnType: res.networks.vpn.vpnType,\n\t\t\t\t\t\tvpnPskLocation: res.networks.vpn.pskLocation,\n\t\t\t\t\t\tvpnPublicIP: res.networks.vpn.publicIP,\n\t\t\t\t\t\tvpnClient: res.networks.vpn.vpnClient,\n\t\t\t\t\t\tservers: res.servers,\n\t\t\t\t\t\tupdatedServerHostname: \"\",\n\t\t\t\t\t\tupdatedServerIP: \"\",\n\t\t\t\t\t\tupdatedServerRole: \"\",\n\t\t\t\t\t\tupdatedServerNotes: \"\",\n\t\t\t\t\t\tselectedApp: \"\",\n\t\t\t\t\t\tupdatedApp: \"\",\n\t\t\t\t\t\tupdatedAppName: \"\",\n\t\t\t\t\t\tupdatedAppInstaller: \"\",\n\t\t\t\t\t\tupdatedAppNotes: \"\",\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tnewCompany: \"\",\n\t\t\t\tnewName: \"\",\n\t\t\t\taddress: \"\",\n\t\t\t\tnewAddress: \"\",\n\t\t\t\temailAddr: \"\",\n\t\t\t\tnewEmailAddr: \"\",\n\t\t\t\tphone: \"\",\n\t\t\t\tnewPhone: \"\",\n\t\t\t\tarticles: [],\n\t\t\t\tapps: [],\n\t\t\t\tselectedApp: {},\n\t\t\t\tupdatedAppName: \"\",\n\t\t\t\tupdatedAppInstaller: \"\",\n\t\t\t\tupdatedAppNotes: \"\",\n\t\t\t\tbackups: {\n\t\t\t\t\toffsiteTechnology: \"\",\n\t\t\t\t\toffsiteWindow: \"\",\n\t\t\t\t\toffsiteFrequency: \"\",\n\t\t\t\t\toffsiteDescription: \"\",\n\t\t\t\t\toffsiteLocation: \"\",\n\t\t\t\t\tlocalTechnology: \"\",\n\t\t\t\t\tlocalWindow: \"\",\n\t\t\t\t\tlocalFrequency: \"\",\n\t\t\t\t\tlocalDescription: \"\",\n\t\t\t\t\tlocalLocation: \"\",\n\t\t\t\t},\n\t\t\t\tnewOffsiteTechnology: \"\",\n\t\t\t\tnewOffsiteWindow: \"\",\n\t\t\t\tnewOffsiteFrequency: \"\",\n\t\t\t\tnewOffsiteDescription: \"\",\n\t\t\t\tnewOffsiteLocation: \"\",\n\t\t\t\tnewLocalTechnology: \"\",\n\t\t\t\tnewLocalWindow: \"\",\n\t\t\t\tnewLocalFrequency: \"\",\n\t\t\t\tnewLocalDescription: \"\",\n\t\t\t\tnewLocalLocation: \"\",\n\t\t\t\temail: {\n\t\t\t\t\tplatform: \"\",\n\t\t\t\t\twebmail: \"\",\n\t\t\t\t\temailServer: \"\",\n\t\t\t\t\tdomains: \"\",\n\t\t\t\t},\n\t\t\t\tnewEmailPlatform: \"\",\n\t\t\t\tnewEmailWebmail: \"\",\n\t\t\t\tnewEmailServer: \"\",\n\t\t\t\tnewEmailDomains: \"\",\n\t\t\t\tshareServer: \"\",\n\t\t\t\tshareRootPath: \"\",\n\t\t\t\tshareOnPrem: false,\n\t\t\t\tshareDriveLetters: \"\",\n\t\t\t\tdns: \"\",\n\t\t\t\tddns: \"\",\n\t\t\t\tsubnet: \"\",\n\t\t\t\tpublic: \"\",\n\t\t\t\tgateway: \"\",\n\t\t\t\tdomainController: \"\",\n\t\t\t\tdhcpServer: \"\",\n\t\t\t\tdhcpScope: \"\",\n\t\t\t\trouterSubnet: \"\",\n\t\t\t\trouterIpAddr: \"\",\n\t\t\t\trouterDhcp: false,\n\t\t\t\trouterPortForwards: \"\",\n\t\t\t\trouterNotes: \"\",\n\t\t\t\trouterVpn: \"\",\n\t\t\t\twirelessSsid: \"\",\n\t\t\t\twirelessEncryption: \"\",\n\t\t\t\twirelessMgmtURL: \"\",\n\t\t\t\tvpnType: \"\",\n\t\t\t\tvpnPskLocation: \"\",\n\t\t\t\tvpnPublicIP: \"\",\n\t\t\t\tvpnClient: \"\",\n\t\t\t\tservers: [],\n\t\t\t\tselectedServer: {},\n\t\t\t\tupdatedServerHostname: \"\",\n\t\t\t\tupdatedServerRole: \"\",\n\t\t\t\tupdatedServerIP: \"\",\n\t\t\t\tupdatedServerNotes: \"\",\n\t\t\t});\n\t\t}\n\t};\n\n\tfetchAllCompanies() {\n\t\tconst requestOptions = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"Content-type\": \"application/json\" },\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail: this.state.userEmail,\n\t\t\t\ttoken: this.state.userToken,\n\t\t\t}),\n\t\t};\n\n\t\tfetch(\"http://45.33.126.222:1944/api/companies/get\", requestOptions)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((res) =>\n\t\t\t\tthis.setState({\n\t\t\t\t\tcompanyList: res,\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\t//changes the selected company\n\tselectCompany(e) {\n\t\tthis.setState({\n\t\t\tcompanyName: e.target.value,\n\t\t});\n\t}\n\t//changes the content view based on the selected nav state\n\tchangeNav(navValue) {\n\t\tif (this.state.companyName) {\n\t\t\tthis.setState({\n\t\t\t\tnav: navValue,\n\t\t\t});\n\t\t}\n\t}\n\n\t//Functions for Company Page\n\tcreateCompany(event) {\n\t\tif (event.target.value !== \"\") {\n\t\t\tevent.preventDefault();\n\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\tbody: JSON.stringify({ company: this.state.newCompany }),\n\t\t\t};\n\n\t\t\tfetch(\n\t\t\t\t\"http://45.33.126.222:1944/api/companies/create\",\n\t\t\t\trequestOptions\n\t\t\t)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then(\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tcompanyName: this.state.newCompany,\n\t\t\t\t\t\tnewCompany: \"\",\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t}\n\t}\n\n\tdeleteCompany(event) {\n\t\tevent.preventDefault();\n\n\t\tconst requestOptions = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify({ company: event.target.value }),\n\t\t};\n\n\t\tfetch(\n\t\t\t\"http://45.33.126.222:1944/api/companies/delete/\" +\n\t\t\t\tevent.target.value +\n\t\t\t\t\"/delete\",\n\t\t\trequestOptions\n\t\t)\n\t\t\t.then((res) => res.json())\n\t\t\t.then(\n\t\t\t\tthis.setState({\n\t\t\t\t\tcompanyName: \"\",\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tupdateCompanyInfo(event) {\n\t\tif (this.state.companyName) {\n\t\t\tevent.preventDefault();\n\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tcompany: this.state.companyName,\n\t\t\t\t\tnewName: this.state.newName,\n\t\t\t\t\taddress: this.state.newAddress,\n\t\t\t\t\tphone: this.state.newPhone,\n\t\t\t\t\temailAddr: this.state.newEmailAddr,\n\t\t\t\t}),\n\t\t\t};\n\n\t\t\tfetch(\n\t\t\t\t\"http://45.33.126.222:1944/api/companies/update/\" +\n\t\t\t\t\tthis.state.companyName +\n\t\t\t\t\t\"/info\",\n\t\t\t\trequestOptions\n\t\t\t)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then(\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\taddress: this.state.newAddress,\n\t\t\t\t\t\tnewAddress: \"\",\n\t\t\t\t\t\tphone: this.state.newPhone,\n\t\t\t\t\t\tnewPhone: \"\",\n\t\t\t\t\t\temailAddr: this.state.newEmailAddr,\n\t\t\t\t\t\tnewEmailAddr: \"\",\n\t\t\t\t\t\tcompanyName: this.state.newName,\n\t\t\t\t\t\tnewName: \"\",\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.then(\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.fetchCompany();\n\t\t\t\t\t}, 500)\n\t\t\t\t);\n\t\t}\n\t}\n\n\thandleNewCompanyChange(event) {\n\t\tthis.setState({\n\t\t\tnewCompany: event.target.value,\n\t\t});\n\t}\n\n\thandleNameChange(event) {\n\t\tthis.setState({\n\t\t\tnewName: event.target.value,\n\t\t});\n\t}\n\n\thandleAddressChange(event) {\n\t\tthis.setState({\n\t\t\tnewAddress: event.target.value,\n\t\t});\n\t}\n\n\thandleEmailChange(event) {\n\t\tthis.setState({\n\t\t\tnewEmailAddr: event.target.value,\n\t\t});\n\t}\n\n\thandlePhoneChange(event) {\n\t\tthis.setState({\n\t\t\tnewPhone: event.target.value,\n\t\t});\n\t}\n\n\t//Functions used by App page\n\n\tselectApp(appObj) {\n\t\tthis.setState({\n\t\t\tselectedApp: appObj,\n\t\t\tupdatedApp: appObj,\n\t\t\tupdatedAppName: appObj.name,\n\t\t\tupdatedAppInstaller: appObj.installer,\n\t\t\tupdatedAppNotes: appObj.notes,\n\t\t});\n\t}\n\n\tdeleteApp(event) {\n\t\tevent.preventDefault();\n\n\t\tconst requestOptions = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcompany: this.state.companyName,\n\t\t\t\tapp: this.state.selectedApp,\n\t\t\t}),\n\t\t};\n\n\t\tfetch(\n\t\t\t\"http://45.33.126.222:1944/api/companies/apps/\" +\n\t\t\t\tthis.state.companyName +\n\t\t\t\t\"/delete\",\n\t\t\trequestOptions\n\t\t)\n\t\t\t.then((res) => res.json())\n\t\t\t.then(\n\t\t\t\tthis.setState({\n\t\t\t\t\tselectedApp: \"\",\n\t\t\t\t\tupdatedApp: \"\",\n\t\t\t\t\tupdatedAppName: \"\",\n\t\t\t\t\tupdatedAppInstaller: \"\",\n\t\t\t\t\tupdatedAppNotes: \"\",\n\t\t\t\t})\n\t\t\t)\n\t\t\t.then(\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.fetchCompany();\n\t\t\t\t}, 500)\n\t\t\t);\n\t}\n\n\tupdateApp(event) {\n\t\tevent.preventDefault();\n\t\tconst requestOptions = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcompany: this.state.companyName,\n\t\t\t\tapp: this.state.selectedApp,\n\t\t\t\tupdatedApp: {\n\t\t\t\t\tname: this.state.updatedAppName,\n\t\t\t\t\tinstaller: this.state.updatedAppInstaller,\n\t\t\t\t\tnotes: this.state.updatedAppNotes,\n\t\t\t\t},\n\t\t\t}),\n\t\t};\n\n\t\tfetch(\n\t\t\t\"http://45.33.126.222:1944/api/companies/apps/\" +\n\t\t\t\tthis.state.companyName +\n\t\t\t\t\"/update\",\n\t\t\trequestOptions\n\t\t)\n\t\t\t.then((res) => res.json())\n\t\t\t.then(\n\t\t\t\tthis.setState({\n\t\t\t\t\tselectedApp: \"\",\n\t\t\t\t\tupdatedAppName: \"\",\n\t\t\t\t\tupdatedAppInstaller: \"\",\n\t\t\t\t\tupdatedAppNotes: \"\",\n\t\t\t\t})\n\t\t\t)\n\t\t\t.then(\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.fetchCompany();\n\t\t\t\t}, 500)\n\t\t\t);\n\t}\n\n\thandleAppNameChange(event) {\n\t\tthis.setState({\n\t\t\tupdatedAppName: event.target.value,\n\t\t});\n\t}\n\n\thandleAppInstallerChange(event) {\n\t\tthis.setState({\n\t\t\tupdatedAppInstaller: event.target.value,\n\t\t});\n\t}\n\n\thandleAppNotesChange(event) {\n\t\tthis.setState({\n\t\t\tupdatedAppNotes: event.target.value,\n\t\t});\n\t}\n\n\tcreateNewApp(event) {\n\t\tevent.preventDefault();\n\t\tthis.setState({\n\t\t\tselectedApp: \"\",\n\t\t\tupdatedAppName: \"\",\n\t\t\tupdatedAppInstaller: \"\",\n\t\t\tupdatedAppNotes: \"\",\n\t\t});\n\t}\n\n\t//Functions used by Backup page\n\n\tupdateBackup(event) {\n\t\tevent.preventDefault();\n\n\t\tconst requestOptions = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcompany: this.state.companyName,\n\t\t\t\tbackups: {\n\t\t\t\t\toffsiteTechnology: this.state.newOffsiteTechnology,\n\t\t\t\t\toffsiteWindow: this.state.newOffsiteWindow,\n\t\t\t\t\toffsiteDescription: this.state.newOffsiteDescription,\n\t\t\t\t\toffsiteLocation: this.state.newOffsiteLocation,\n\t\t\t\t\toffsiteFrequency: this.state.newOffsiteFrequency,\n\t\t\t\t\tlocalTechnology: this.state.newLocalTechnology,\n\t\t\t\t\tlocalWindow: this.state.newLocalWindow,\n\t\t\t\t\tlocalDescription: this.state.newLocalDescription,\n\t\t\t\t\tlocalLocation: this.state.newLocalLocation,\n\t\t\t\t\tlocalFrequency: this.state.newLocalDescription,\n\t\t\t\t},\n\t\t\t}),\n\t\t};\n\n\t\tfetch(\n\t\t\t\"http://45.33.126.222:1944/api/companies/backups/\" +\n\t\t\t\tthis.state.companyName +\n\t\t\t\t\"/update\",\n\t\t\trequestOptions\n\t\t)\n\t\t\t.then((res) => res.json())\n\t\t\t.then(\n\t\t\t\tthis.setState({\n\t\t\t\t\tnewOffsiteTechnology: \"\",\n\t\t\t\t\tnewOffsiteWindow: \"\",\n\t\t\t\t\tnewOffsiteFrequency: \"\",\n\t\t\t\t\tnewOffsiteDescription: \"\",\n\t\t\t\t\tnewOffsiteLocation: \"\",\n\t\t\t\t\tnewLocalTechnology: \"\",\n\t\t\t\t\tnewLocalWindow: \"\",\n\t\t\t\t\tnewLocalFrequency: \"\",\n\t\t\t\t\tnewLocalDescription: \"\",\n\t\t\t\t\tnewLocalLocation: \"\",\n\t\t\t\t})\n\t\t\t)\n\t\t\t.then(\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.fetchCompany();\n\t\t\t\t}, 500)\n\t\t\t);\n\t}\n\n\thandleBackupOTChange(event) {\n\t\tthis.setState({\n\t\t\tnewOffsiteTechnology: event.target.value,\n\t\t});\n\t}\n\n\thandleBackupOWChange(event) {\n\t\tthis.setState({\n\t\t\tnewOffsiteWindow: event.target.value,\n\t\t});\n\t}\n\n\thandleBackupOFChange(event) {\n\t\tthis.setState({\n\t\t\tnewOffsiteFrequency: event.target.value,\n\t\t});\n\t}\n\n\thandleBackupODChange(event) {\n\t\tthis.setState({\n\t\t\tnewOffsiteDescription: event.target.value,\n\t\t});\n\t}\n\n\thandleBackupOLChange(event) {\n\t\tthis.setState({\n\t\t\tnewOffsiteLocation: event.target.value,\n\t\t});\n\t}\n\n\thandleBackupLTChange(event) {\n\t\tthis.setState({\n\t\t\tnewLocalTechnology: event.target.value,\n\t\t});\n\t}\n\n\thandleBackupLWChange(event) {\n\t\tthis.setState({\n\t\t\tnewLocalWindow: event.target.value,\n\t\t});\n\t}\n\n\thandleBackupLFChange(event) {\n\t\tthis.setState({\n\t\t\tnewLocalFrequency: event.target.value,\n\t\t});\n\t}\n\n\thandleBackupLDChange(event) {\n\t\tthis.setState({\n\t\t\tnewLocalDescription: event.target.value,\n\t\t});\n\t}\n\n\thandleBackupLLChange(event) {\n\t\tthis.setState({\n\t\t\tnewLocalLocation: event.target.value,\n\t\t});\n\t}\n\n\t//Functions used by email page\n\n\tupdateEmail(event) {\n\t\tevent.preventDefault();\n\t\tconst requestOptions = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcompany: this.state.companyName,\n\t\t\t\temail: {\n\t\t\t\t\twebmail: this.state.newEmailWebmail,\n\t\t\t\t\tplatform: this.state.newEmailPlatform,\n\t\t\t\t\tdomains: this.state.newEmailDomains,\n\t\t\t\t\tserver: this.state.newEmailServer,\n\t\t\t\t},\n\t\t\t}),\n\t\t};\n\n\t\tfetch(\n\t\t\t\"http://45.33.126.222:1944/api/companies/email/\" +\n\t\t\t\tthis.state.companyName,\n\t\t\trequestOptions\n\t\t)\n\t\t\t.then((res) => res.json())\n\t\t\t.then(\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.fetchCompany();\n\t\t\t\t}, 500)\n\t\t\t);\n\t}\n\n\thandleEmailPlatformChange(event) {\n\t\tthis.setState({\n\t\t\tnewEmailPlatform: event.target.value,\n\t\t});\n\t}\n\n\thandleEmailWebmailChange(event) {\n\t\tthis.setState({\n\t\t\tnewEmailWebmail: event.target.value,\n\t\t});\n\t}\n\n\thandleEmailServerChange(event) {\n\t\tthis.setState({\n\t\t\tnewEmailServer: event.target.value,\n\t\t});\n\t}\n\n\thandleEmailDomainsChange(event) {\n\t\tthis.setState({\n\t\t\tnewEmailDomains: event.target.value,\n\t\t});\n\t}\n\n\t//Functions for Shares component\n\tupdateShares(event) {\n\t\tevent.preventDefault();\n\t\tconst requestOptions = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcompany: this.state.companyName,\n\t\t\t\tfileShares: {\n\t\t\t\t\tserver: this.state.shareServer,\n\t\t\t\t\tdriveLetters: this.state.shareDriveLetters,\n\t\t\t\t\tonPrem: this.state.shareOnPrem,\n\t\t\t\t\trootPath: this.state.shareRootPath,\n\t\t\t\t},\n\t\t\t}),\n\t\t};\n\n\t\tfetch(\n\t\t\t\"http://45.33.126.222:1944/api/companies/shares/\" +\n\t\t\t\tthis.state.companyName,\n\t\t\trequestOptions\n\t\t)\n\t\t\t.then((res) => res.json())\n\t\t\t.then(\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.fetchCompany();\n\t\t\t\t}, 500)\n\t\t\t);\n\t}\n\n\thandleShareChange(event) {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value,\n\t\t});\n\t}\n\n\thandleCheckChange(event) {\n\t\tthis.setState({\n\t\t\tshareOnPrem: !this.state.shareOnPrem,\n\t\t});\n\t}\n\n\t//Networks page functions\n\n\tupdateNetworks(event) {\n\t\tevent.preventDefault();\n\t\tconst requestOptions = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcompany: this.state.companyName,\n\t\t\t\tnetworks: {\n\t\t\t\t\tdns: this.state.dns,\n\t\t\t\t\tddns: this.state.ddns,\n\t\t\t\t\tsubnet: this.state.subnet,\n\t\t\t\t\tpublic: this.state.public,\n\t\t\t\t\tgateway: this.state.gateway,\n\t\t\t\t\tdomainController: this.state.domainController,\n\t\t\t\t\tdhcpServer: this.state.dhcpServer,\n\t\t\t\t\tdhcpScope: this.state.dhcpScope,\n\t\t\t\t\trouter: {\n\t\t\t\t\t\tsubnet: this.state.routerSubnet,\n\t\t\t\t\t\tipAddr: this.state.routerIpAddr,\n\t\t\t\t\t\tdhcp: this.state.routerDhcp,\n\t\t\t\t\t\tportForwards: this.state.routerPortForwards,\n\t\t\t\t\t\tnotes: this.state.routerNotes,\n\t\t\t\t\t\tvpn: this.state.routerVpn,\n\t\t\t\t\t},\n\t\t\t\t\twireless: {\n\t\t\t\t\t\tssid: this.state.wirelessSsid,\n\t\t\t\t\t\tencryption: this.state.wirelessEncryption,\n\t\t\t\t\t\tmgmtURL: this.state.wirelessMgmtURL,\n\t\t\t\t\t},\n\t\t\t\t\tvpn: {\n\t\t\t\t\t\tvpnType: this.state.vpnType,\n\t\t\t\t\t\tpskLocation: this.state.vpnPskLocation,\n\t\t\t\t\t\tpublicIP: this.state.vpnPublicIP,\n\t\t\t\t\t\tvpnClient: this.state.vpnClient,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\t};\n\n\t\tfetch(\n\t\t\t\"http://45.33.126.222:1944/api/companies/networks/\" +\n\t\t\t\tthis.state.companyName,\n\t\t\trequestOptions\n\t\t)\n\t\t\t.then((res) => res.json())\n\t\t\t.then(\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.fetchCompany();\n\t\t\t\t}, 500)\n\t\t\t);\n\t}\n\n\thandleNetworksChange(event) {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value,\n\t\t});\n\t}\n\n\thandleRouterDhcpChange(event) {\n\t\tthis.setState({\n\t\t\trouterDhcp: !this.state.routerDhcp,\n\t\t});\n\t}\n\n\t//Functions used by server page\n\tselectServer(serverObj) {\n\t\tthis.setState({\n\t\t\tselectedServer: serverObj,\n\t\t\tupdatedServer: serverObj,\n\t\t\tupdatedServerHostname: serverObj.hostname,\n\t\t\tupdatedServerIP: serverObj.ip,\n\t\t\tupdatedServerRole: serverObj.role,\n\t\t\tupdatedServerNotes: serverObj.notes,\n\t\t});\n\t}\n\n\tdeleteServer(event) {\n\t\tevent.preventDefault();\n\n\t\tconst requestOptions = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcompany: this.state.companyName,\n\t\t\t\tserver: this.state.selectedServer,\n\t\t\t}),\n\t\t};\n\n\t\tfetch(\n\t\t\t\"http://45.33.126.222:1944/api/companies/servers/\" +\n\t\t\t\tthis.state.companyName +\n\t\t\t\t\"/delete\",\n\t\t\trequestOptions\n\t\t)\n\t\t\t.then((res) => res.json())\n\t\t\t.then(\n\t\t\t\tthis.setState({\n\t\t\t\t\tselectedServer: {},\n\t\t\t\t\tupdatedServer: {},\n\t\t\t\t\tupdatedServerHostname: \"\",\n\t\t\t\t\tupdatedServerIP: \"\",\n\t\t\t\t\tupdatedServerRole: \"\",\n\t\t\t\t\tupdatedServerNotes: \"\",\n\t\t\t\t})\n\t\t\t)\n\t\t\t.then(\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.fetchCompany();\n\t\t\t\t}, 500)\n\t\t\t);\n\t}\n\n\tupdateServer(event) {\n\t\tevent.preventDefault();\n\t\tconst requestOptions = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcompany: this.state.companyName,\n\t\t\t\tserver: this.state.selectedServer,\n\t\t\t\tupdatedServer: {\n\t\t\t\t\thostname: this.state.updatedServerHostname,\n\t\t\t\t\trole: this.state.updatedServerRole,\n\t\t\t\t\tip: this.state.updatedServerIP,\n\t\t\t\t\tnotes: this.state.updatedServerNotes,\n\t\t\t\t},\n\t\t\t}),\n\t\t};\n\n\t\tfetch(\n\t\t\t\"http://45.33.126.222:1944/api/companies/servers/\" +\n\t\t\t\tthis.state.companyName +\n\t\t\t\t\"/update\",\n\t\t\trequestOptions\n\t\t)\n\t\t\t.then((res) => res.json())\n\t\t\t.then(\n\t\t\t\tthis.setState({\n\t\t\t\t\tselectedServer: {},\n\t\t\t\t\tupdatedServerHostname: \"\",\n\t\t\t\t\tupdatedServerIP: \"\",\n\t\t\t\t\tupdatedServerRole: \"\",\n\t\t\t\t\tupdatedServerNotes: \"\",\n\t\t\t\t})\n\t\t\t)\n\t\t\t.then(\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.fetchCompany();\n\t\t\t\t}, 500)\n\t\t\t);\n\t}\n\n\thandleServerChange(event) {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value,\n\t\t});\n\t}\n\n\tcreateNewServer(event) {\n\t\tevent.preventDefault();\n\t\tthis.setState({\n\t\t\tselectedServer: {},\n\t\t\tupdatedServerHostname: \"\",\n\t\t\tupdatedServerIP: \"\",\n\t\t\tupdatedServerRole: \"\",\n\t\t});\n\t}\n\n\t//React Hooks\n\tcomponentDidMount() {\n\t\tthis.fetchAllCompanies();\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (prevState.companyName !== this.state.companyName) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.fetchCompany();\n\t\t\t\tthis.fetchAllCompanies();\n\t\t\t}, 500);\n\t\t}\n\t}\n\n\trender() {\n\t\tif (this.state.nav === \"companies\" || this.state.companyName === \"\") {\n\t\t\treturn (\n\t\t\t\t<div id=\"app-container\">\n\t\t\t\t\t<Navbar changeNav={this.changeNav} />\n\t\t\t\t\t<Topbar\n\t\t\t\t\t\tcompanyList={this.state.companyList}\n\t\t\t\t\t\tfetchAllCompanies={this.fetchAllCompanies}\n\t\t\t\t\t\tselectCompany={this.selectCompany}\n\t\t\t\t\t\tcompanyName={this.state.companyName}\n\t\t\t\t\t/>\n\t\t\t\t\t<h1>{this.state.counter}</h1>\n\t\t\t\t\t<div id=\"content-container\">\n\t\t\t\t\t\t<Companies\n\t\t\t\t\t\t\tupdateCompanyInfo={this.updateCompanyInfo}\n\t\t\t\t\t\t\thandlePhoneChange={this.handlePhoneChange}\n\t\t\t\t\t\t\tupdateCompanyPhone={this.updateCompanyPhone}\n\t\t\t\t\t\t\tnewEmailAddr={this.state.newEmailAddr}\n\t\t\t\t\t\t\temailAddr={this.state.emailAddr}\n\t\t\t\t\t\t\tnewPhone={this.state.newPhone}\n\t\t\t\t\t\t\tphone={this.state.phone}\n\t\t\t\t\t\t\thandleEmailChange={this.handleEmailChange}\n\t\t\t\t\t\t\tupdateCompanyEmail={this.updateCompanyEmail}\n\t\t\t\t\t\t\thandleAddressChange={this.handleAddressChange}\n\t\t\t\t\t\t\tupdateCompanyAddress={this.updateCompanyAddress}\n\t\t\t\t\t\t\taddress={this.state.address}\n\t\t\t\t\t\t\tnewAddress={this.state.newAddress}\n\t\t\t\t\t\t\tnewCompany={this.state.newCompany}\n\t\t\t\t\t\t\thandleNewCompanyChange={this.handleNewCompanyChange}\n\t\t\t\t\t\t\tcreateCompany={this.createCompany}\n\t\t\t\t\t\t\tdeleteCompany={this.deleteCompany}\n\t\t\t\t\t\t\thandleNameChange={this.handleNameChange}\n\t\t\t\t\t\t\tnewName={this.state.newName}\n\t\t\t\t\t\t\tupdateCompanyName={this.updateCompanyName}\n\t\t\t\t\t\t\tcompanyList={this.state.companyList}\n\t\t\t\t\t\t\tfetchAllCompanies={this.fetchAllCompanies}\n\t\t\t\t\t\t\tselectCompany={this.selectCompany}\n\t\t\t\t\t\t\tcompanyName={this.state.companyName}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if (this.state.nav === \"articles\") {\n\t\t\treturn (\n\t\t\t\t<div id=\"app-container\">\n\t\t\t\t\t<Navbar changeNav={this.changeNav} />\n\t\t\t\t\t<Topbar\n\t\t\t\t\t\tcompanyList={this.state.companyList}\n\t\t\t\t\t\tfetchAllCompanies={this.fetchAllCompanies}\n\t\t\t\t\t\tselectCompany={this.selectCompany}\n\t\t\t\t\t\tcompanyName={this.state.companyName}\n\t\t\t\t\t/>\n\t\t\t\t\t<div id=\"content-container\">\n\t\t\t\t\t\t<Articles\n\t\t\t\t\t\t\tuserEmail={this.state.userEmail}\n\t\t\t\t\t\t\tuserToken={this.state.userToken}\n\t\t\t\t\t\t\tsetState={this.setState}\n\t\t\t\t\t\t\tfetchCompany={this.fetchCompany}\n\t\t\t\t\t\t\tcompanyName={this.state.companyName}\n\t\t\t\t\t\t\tarticles={this.state.articles}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if (this.state.nav === \"applications\") {\n\t\t\treturn (\n\t\t\t\t<div id=\"app-container\">\n\t\t\t\t\t<Navbar changeNav={this.changeNav} />\n\t\t\t\t\t<Topbar\n\t\t\t\t\t\tcompanyList={this.state.companyList}\n\t\t\t\t\t\tfetchAllCompanies={this.fetchAllCompanies}\n\t\t\t\t\t\tselectCompany={this.selectCompany}\n\t\t\t\t\t\tcompanyName={this.state.companyName}\n\t\t\t\t\t/>\n\t\t\t\t\t<div id=\"content-container\">\n\t\t\t\t\t\t<Applications\n\t\t\t\t\t\t\tcreateNewApp={this.createNewApp}\n\t\t\t\t\t\t\thandleAppNotesChange={this.handleAppNotesChange}\n\t\t\t\t\t\t\tupdatedAppNotes={this.state.updatedAppNotes}\n\t\t\t\t\t\t\tupdatedAppInstaller={this.state.updatedAppInstaller}\n\t\t\t\t\t\t\tupdatedAppName={this.state.updatedAppName}\n\t\t\t\t\t\t\thandleAppInstallerChange={\n\t\t\t\t\t\t\t\tthis.handleAppInstallerChange\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tupdateApp={this.updateApp}\n\t\t\t\t\t\t\thandleAppNameChange={this.handleAppNameChange}\n\t\t\t\t\t\t\tdeleteApp={this.deleteApp}\n\t\t\t\t\t\t\tselectedApp={this.state.selectedApp}\n\t\t\t\t\t\t\tselectApp={this.selectApp}\n\t\t\t\t\t\t\tapps={this.state.apps}\n\t\t\t\t\t\t\tcompanyName={this.state.companyName}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if (this.state.nav === \"backups\") {\n\t\t\treturn (\n\t\t\t\t<div id=\"app-container\">\n\t\t\t\t\t<Navbar changeNav={this.changeNav} />\n\t\t\t\t\t<Topbar\n\t\t\t\t\t\tcompanyList={this.state.companyList}\n\t\t\t\t\t\tfetchAllCompanies={this.fetchAllCompanies}\n\t\t\t\t\t\tselectCompany={this.selectCompany}\n\t\t\t\t\t\tcompanyName={this.state.companyName}\n\t\t\t\t\t/>\n\t\t\t\t\t<div id=\"content-container\">\n\t\t\t\t\t\t<Backups\n\t\t\t\t\t\t\t{...this.state}\n\t\t\t\t\t\t\tupdateBackup={this.updateBackup}\n\t\t\t\t\t\t\thandleBackupOWChange={this.handleBackupOWChange}\n\t\t\t\t\t\t\thandleBackupOLChange={this.handleBackupOLChange}\n\t\t\t\t\t\t\thandleBackupOFChange={this.handleBackupOFChange}\n\t\t\t\t\t\t\thandleBackupODChange={this.handleBackupODChange}\n\t\t\t\t\t\t\thandleBackupOTChange={this.handleBackupOTChange}\n\t\t\t\t\t\t\thandleBackupLWChange={this.handleBackupLWChange}\n\t\t\t\t\t\t\thandleBackupLTChange={this.handleBackupLTChange}\n\t\t\t\t\t\t\thandleBackupLLChange={this.handleBackupLLChange}\n\t\t\t\t\t\t\thandleBackupLFChange={this.handleBackupLFChange}\n\t\t\t\t\t\t\thandleBackupLDChange={this.handleBackupLDChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if (this.state.nav === \"email\") {\n\t\t\treturn (\n\t\t\t\t<div id=\"app-container\">\n\t\t\t\t\t<Navbar changeNav={this.changeNav} />\n\t\t\t\t\t<Topbar\n\t\t\t\t\t\tcompanyList={this.state.companyList}\n\t\t\t\t\t\tfetchAllCompanies={this.fetchAllCompanies}\n\t\t\t\t\t\tselectCompany={this.selectCompany}\n\t\t\t\t\t\tcompanyName={this.state.companyName}\n\t\t\t\t\t/>\n\t\t\t\t\t<div id=\"content-container\">\n\t\t\t\t\t\t<Email\n\t\t\t\t\t\t\t{...this.state}\n\t\t\t\t\t\t\tupdateEmail={this.updateEmail}\n\t\t\t\t\t\t\thandleEmailWebmailChange={\n\t\t\t\t\t\t\t\tthis.handleEmailWebmailChange\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thandleEmailServerChange={\n\t\t\t\t\t\t\t\tthis.handleEmailServerChange\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thandleEmailPlatformChange={\n\t\t\t\t\t\t\t\tthis.handleEmailPlatformChange\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thandleEmailDomainsChange={\n\t\t\t\t\t\t\t\tthis.handleEmailDomainsChange\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if (this.state.nav === \"shares\") {\n\t\t\treturn (\n\t\t\t\t<div id=\"app-container\">\n\t\t\t\t\t<Navbar changeNav={this.changeNav} />\n\t\t\t\t\t<Topbar\n\t\t\t\t\t\tcompanyList={this.state.companyList}\n\t\t\t\t\t\tfetchAllCompanies={this.fetchAllCompanies}\n\t\t\t\t\t\tselectCompany={this.selectCompany}\n\t\t\t\t\t\tcompanyName={this.state.companyName}\n\t\t\t\t\t/>\n\t\t\t\t\t<div id=\"content-container\">\n\t\t\t\t\t\t<Shares\n\t\t\t\t\t\t\t{...this.state}\n\t\t\t\t\t\t\thandleCheckChange={this.handleCheckChange}\n\t\t\t\t\t\t\tupdateShares={this.updateShares}\n\t\t\t\t\t\t\thandleShareChange={this.handleShareChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if (this.state.nav === \"networks\") {\n\t\t\treturn (\n\t\t\t\t<div id=\"app-container\">\n\t\t\t\t\t<Navbar changeNav={this.changeNav} />\n\t\t\t\t\t<Topbar\n\t\t\t\t\t\tcompanyList={this.state.companyList}\n\t\t\t\t\t\tfetchAllCompanies={this.fetchAllCompanies}\n\t\t\t\t\t\tselectCompany={this.selectCompany}\n\t\t\t\t\t\tcompanyName={this.state.companyName}\n\t\t\t\t\t/>\n\t\t\t\t\t<div id=\"content-container\">\n\t\t\t\t\t\t<Networks\n\t\t\t\t\t\t\thandleRouterDhcpChange={this.handleRouterDhcpChange}\n\t\t\t\t\t\t\thandleNetworksChange={this.handleNetworksChange}\n\t\t\t\t\t\t\tupdateNetworks={this.updateNetworks}\n\t\t\t\t\t\t\t{...this.state}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if (this.state.nav === \"servers\") {\n\t\t\treturn (\n\t\t\t\t<div id=\"app-container\">\n\t\t\t\t\t<Navbar changeNav={this.changeNav} />\n\t\t\t\t\t<Topbar\n\t\t\t\t\t\tcompanyList={this.state.companyList}\n\t\t\t\t\t\tfetchAllCompanies={this.fetchAllCompanies}\n\t\t\t\t\t\tselectCompany={this.selectCompany}\n\t\t\t\t\t\tcompanyName={this.state.companyName}\n\t\t\t\t\t/>\n\t\t\t\t\t<div id=\"content-container\">\n\t\t\t\t\t\t<Servers\n\t\t\t\t\t\t\tselectServer={this.selectServer}\n\t\t\t\t\t\t\tcreateNewServer={this.createNewServer}\n\t\t\t\t\t\t\tdeleteServer={this.deleteServer}\n\t\t\t\t\t\t\thandleServerChange={this.handleServerChange}\n\t\t\t\t\t\t\tupdateServer={this.updateServer}\n\t\t\t\t\t\t\t{...this.state}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default Auri;\n","/mnt/Data/Code/Auri-Docs/client/src/Components/Loading.jsx",[],"/mnt/Data/Code/Auri-Docs/client/src/Components/Error.jsx",[],"/mnt/Data/Code/Auri-Docs/client/src/Components/Topbar.jsx",[],"/mnt/Data/Code/Auri-Docs/client/src/Screens/Backups.jsx",[],"/mnt/Data/Code/Auri-Docs/client/src/Components/Navbar.jsx",[],"/mnt/Data/Code/Auri-Docs/client/src/Screens/Companies.jsx",[],"/mnt/Data/Code/Auri-Docs/client/src/Screens/Applications.jsx",[],"/mnt/Data/Code/Auri-Docs/client/src/Screens/Articles.jsx",["76","77"],"/mnt/Data/Code/Auri-Docs/client/src/Screens/Networks.jsx",[],"/mnt/Data/Code/Auri-Docs/client/src/Screens/Email.jsx",[],"/mnt/Data/Code/Auri-Docs/client/src/Screens/Servers.jsx",[],"/mnt/Data/Code/Auri-Docs/client/src/Screens/Shares.jsx",[],"/mnt/Data/Code/Auri-Docs/client/src/index.jsx",[],{"ruleId":"78","severity":1,"message":"79","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":9},{"ruleId":"78","severity":1,"message":"82","line":4,"column":10,"nodeType":"80","messageId":"81","endLine":4,"endColumn":16},{"ruleId":"83","severity":1,"message":"84","line":166,"column":5,"nodeType":"85","endLine":171,"endColumn":6},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]