[{"/home/highadmin/Git/projects/playground/mern-app/frontend/src/index.js":"1","/home/highadmin/Git/projects/playground/mern-app/frontend/src/reportWebVitals.js":"2","/home/highadmin/Git/projects/playground/mern-app/frontend/src/App.jsx":"3"},{"size":508,"mtime":1624284057735,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1624284057735,"results":"6","hashOfConfig":"5"},{"size":4408,"mtime":1624465273074,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1m8qzop",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/home/highadmin/Git/projects/playground/mern-app/frontend/src/index.js",[],["16","17"],"/home/highadmin/Git/projects/playground/mern-app/frontend/src/reportWebVitals.js",[],"/home/highadmin/Git/projects/playground/mern-app/frontend/src/App.jsx",["18","19","20","21","22"],"import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\n\n//Parent Component\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcompanyName: \"Lotus Gold\",\n\t\t\taddress: \"\",\n\t\t\tarticles: [],\n\t\t\trouter: {\n\t\t\t\tsubnet: \"\",\n\t\t\t\tipAddr: \"\",\n\t\t\t\tvpn: \"\"\n\t\t\t}\n\t\t};\n\t\tthis.fetchCompany = this.fetchCompany.bind(this);\n\t};\n\n\tfetchCompany() {\n\t\tfetch(\"http://127.0.0.1:1313/companies/\" + this.state.companyName)\n\t\t\t.then(res => res.json())\t\n\t\t\t.then(res => this.setState({\n\t\t\t\taddress: res.address,\n\t\t\t\trouter: res.router\n\t\t\t}))\n\t};\n\n\n\tcomponentDidMount() {\n\t\tthis.fetchCompany();\t\t\n\t}\n\n\n\trender() {\n\t\t return (\n\t\t\t\n\t\t\t<div id=\"app-container\">\n\t\t\t\t<Navbar />\n\t\t\t\t<Topbar companyName={this.state.companyName}/>\n\t\t\t\t<div id=\"content-container\">\t\t\t \t\t\n\t\t\t\t\t<Articles setState={this.setState} fetchCompany={this.fetchCompany} companyName={this.state.companyName} articles={this.state.articles}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t )\n\t}\n};\n\n//Navbar\nclass Navbar extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<nav id=\"navbar\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li><button href=\"#\">Articles</button></li>\n\t\t\t\t\t<li><button href=\"#\">Apps</button></li>\n\t\t\t\t\t<li><button href=\"#\">Backup</button></li>\n\t\t\t\t\t<li><button href=\"#\">Email</button></li>\n\t\t\t\t\t<li><button href=\"#\">File Shares</button></li>\n\t\t\t\t\t<li><button href=\"#\">Networks</button></li>\n\t\t\t\t\t<li><button href=\"#\">Router</button></li>\n\t\t\t\t\t<li><button href=\"#\">Servers</button></li>\n\t\t\t\t</ul>\n\t\t\t</nav>\n\n\t\t)\n\t}\n}\n\nclass Topbar extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"topbar\">\n\t\t\t\t<select name=\"Dropdown\" id=\"\">\n\t\t\t\t\t<option value=\"\">test</option>\n\t\t\t\t\t<option value=\"\">test</option>\n\t\t\t\t\t<option value=\"\">test</option>\n\t\t\t\t\t<option value=\"\">test</option>\n\t\t\t\t</select>\n\t\t\t\t<h1>{this.props.companyName}</h1>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n//Articles Section\nclass Articles extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnewTitle: \"\",\n\t\t\tnewBody: \"\",\n\t\t\tarticles: [] \n\t\t};\n\t\tthis.updateArticle = this.updateArticle.bind(this);\n\t\tthis.handleTitleChange = this.handleTitleChange.bind(this);\n\t\tthis.handleBodyChange = this.handleBodyChange.bind(this);\n\t\tthis.fetchArticle = this.fetchArticle.bind(this);\n\t}\n\n\t\n\n\thandleTitleChange(event) {\n\t\tthis.setState({\n\t\t\tnewTitle: event.target.value,\n\t\t});\n\t}\n\n\thandleBodyChange(event) {\n\t\tthis.setState({\n\t\t\tnewBody: event.target.value,\n\t\t});\n\t}\n\n\tfetchArticle() {\n\t\tfetch(\"http://127.0.0.1:1313/companies/\" + this.props.companyName)\n\t\t\t.then(res => res.json())\t\n\t\t\t.then(res => this.setState({\n\t\t\t\tarticles: res.articles\n\t\t\t}))\n\t};\n\n\tupdateArticle(event) {\n\t\tevent.preventDefault();\n\t\tconst requestOptions = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\tbody: JSON.stringify({company: this.props.companyName, title: this.state.newTitle, content: this.state.newBody})\n\t\t};\n\t\t\n\t\tfetch(\"http://127.0.0.1:1313/companies/articles/\" + this.props.companyName, requestOptions)\n\t\t\t.then(res => res.json())\n\t\t\n\t\tthis.setState({\n\t\t\tarticles: [...this.state.articles,{title: this.state.newTitle,content:this.state.newBody}],\n\t\t\tnewTitle: \"\",\n\t\t\tnewBody: \"\"\n\t\t});\t\t\t\n\t};\n\n\n\tcomponentDidMount() {\n\t\tthis.fetchArticle();\n\t}\n\n\trender() {\n\t\t\n\n\t\t\n\t\tconst article = this.state.articles.map((item,index) => \n\t\t\t<div>\n\t\t\t\t<h3><a data-toggle=\"collapse\" data-target={\"#article-content-\"+ item.title.split(\" \").join(\"-\") + index.toString()} aria-expanded=\"false\" aria-controls={\"article-content-\" + item.title + index.toString()}>{item.title}</a></h3>\n\t\t\t\t<div class=\"collapse\" id={\"article-content-\" +item.title.split(\" \").join(\"-\") + index.toString()}>\n\t\t\t\t\t<div class=\"card card-body\">{item.content}</div>\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t\t)\n\t\t\n\n\t\treturn (\n\t\t\t<div id=\"article-container\">\n\t\t\t\t<form onSubmit={(event) => {this.updateArticle(event); this.props.fetchCompany()}}>\n\t\t\t\t\t<input onChange={this.handleTitleChange} value={this.state.newTitle} type=\"text\" />\n\t\t\t\t\t<textarea onChange={this.handleBodyChange} value={this.state.newBody} name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\n\t\t\t\t\t<button type=\"submit\">Add new article</button>\n\t\t\t\t</form>\n\t\t\t\t<div id=\"articles\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{article}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t)\n\t}\n}\n\n\nexport default App;\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":3,"column":8,"nodeType":"29","messageId":"30","endLine":3,"endColumn":9},{"ruleId":"27","severity":1,"message":"31","line":4,"column":8,"nodeType":"29","messageId":"30","endLine":4,"endColumn":14},{"ruleId":"32","severity":1,"message":"33","line":57,"column":2,"nodeType":"34","messageId":"35","endLine":59,"endColumn":3},{"ruleId":"32","severity":1,"message":"33","line":81,"column":2,"nodeType":"34","messageId":"35","endLine":83,"endColumn":3},{"ruleId":"36","severity":1,"message":"37","line":165,"column":9,"nodeType":"38","endLine":165,"endColumn":210},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]