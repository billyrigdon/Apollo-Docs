{"ast":null,"code":"var _jsxFileName = \"/home/billy@high.t/Git/personal/aurora-docs/frontend/src/App.jsx\";\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min'; //Parent Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nav: \"companies\",\n      companyName: \"\",\n      newName: \"\",\n      address: \"\",\n      articles: [],\n      router: {\n        subnet: \"\",\n        ipAddr: \"\",\n        vpn: \"\"\n      },\n      companyList: []\n    };\n    this.fetchCompany = this.fetchCompany.bind(this);\n    this.updateCompany = this.updateCompany.bind(this);\n    this.changeNav = this.changeNav.bind(this);\n    this.fetchAllCompanies = this.fetchAllCompanies.bind(this);\n    this.updateCompanyName = this.updateCompanyName.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n\n  fetchCompany() {\n    fetch(\"http://127.0.0.1:1313/companies/\" + this.state.companyName).then(res => res.json()).then(res => this.setState({\n      address: res.address,\n      router: res.router\n    }));\n  }\n\n  fetchAllCompanies() {\n    fetch(\"http://127.0.0.1:1313/companies/\").then(res => res.json()).then(res => this.setState({\n      companyList: res\n    }));\n  }\n\n  updateCompany(e) {\n    this.setState({\n      companyName: e.target.value\n    });\n  }\n\n  changeNav(navValue) {\n    this.setState({\n      nav: navValue\n    });\n  }\n\n  updateCompanyName(event) {\n    event.preventDefault();\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        company: this.state.companyName,\n        newName: this.state.newName\n      })\n    };\n    fetch(\"http://127.0.0.1:1313/companies/\" + this.state.companyName + \"/name\", requestOptions).then(res => res.json()).then(res => this.setState({\n      companyName: this.state.newName,\n      newName: \"\"\n    }));\n  }\n\n  handleNameChange(event) {\n    this.setState({\n      newName: event.target.value\n    });\n  }\n\n  /*\n  \tcomponentWillMount() {\n  \t\tthis.fetchCompany();\n  \t\tthis.fetchAllCompanies();\t\n  \t};\n  \n  \tcomponentWillUpdate() {\n  \t\tthis.fetchCompany();\n  \t};\n  \n  \trender() {\n  \n  \t\tif (this.state.nav === \"companies\" || this.state.companyName === \"\") {\n  \t\t\treturn (\n  \t\t\t\t<div id=\"app-container\">\n  \t\t\t\t\t<Navbar changeNav={this.changeNav} />\n  \t\t\t\t\t<Topbar companyList={this.state.companyList} fetchAllCompanies={this.fetchAllCompanies} updateCompany={this.updateCompany} companyName={this.state.companyName}/>\n  \t\t\t\t\t<div id=\"content-container\">\n  \t\t\t\t\t\t<Companies handleNameChange={this.handleNameChange} newName={this.state.newName} updateCompanyName={this.updateCompanyName} companyList={this.state.companyList} fetchAllCompanies={this.fetchAllCompanies} updateCompany={this.updateCompany} companyName={this.state.companyName} />\n  \t\t\t\t\t</div>\n  \t\t\t\t</div>\n  \t\t \t)\n  \t\t} else if (this.state.nav === \"articles\") {\n  \t\t\treturn (\n  \t\t\t\t<div id=\"app-container\">\n  \t\t\t\t\t<Navbar changeNav={this.changeNav} />\n  \t\t\t\t\t<Topbar companyList={this.state.companyList} fetchAllCompanies={this.fetchAllCompanies} updateCompany={this.updateCompany} companyName={this.state.companyName}/>\n  \t\t\t\t\t<div id=\"content-container\">\t\t\t \t\t\n  \t\t\t\t\t\t<Articles setState={this.setState} fetchCompany={this.fetchCompany} companyName={this.state.companyName} articles={this.state.articles}/>\n  \t\t\t\t\t</div>\n  \t\t\t\t</div>\n  \t\t \t)\n  \t\t}\n  \t}\n  };\n  \n  //Navbar\n  class Navbar extends React.Component {\n  \tconstructor(props) {\n  \t\tsuper(props);\n  \t}\n  \n  \trender() {\n  \t\treturn (\n  \t\t\t<nav id=\"navbar\">\n  \t\t\t\t<ul>\n  \t\t\t\t\t<li className=\"nav-button\" onClick={() => this.props.changeNav(\"companies\")}>\n  \t\t\t\t\t\t<span className=\"material-icons\">business</span>\n  \t\t\t\t\t\t<h5>Companies</h5>\n  \t\t\t\t\t</li>\n  \t\t\t\t\t<li className=\"nav-button\" onClick={() => this.props.changeNav(\"articles\")}>\n  \t\t\t\t\t\t<span className=\"material-icons\">book</span>\n  \t\t\t\t\t\t<h5>Articles</h5>\n  \t\t\t\t\t</li>\n  \t\t\t\t\t<li className=\"nav-button\">\n  \t\t\t\t\t\t<span className=\"material-icons\">apps</span>\n  \t\t\t\t\t\t<h5>Apps</h5>\n  \t\t\t\t\t</li>\n  \t\t\t\t\t<li className=\"nav-button\">\n  \t\t\t\t\t\t<span className=\"material-icons\">cloud_upload</span>\n  \t\t\t\t\t\t<h5>Backup</h5>\n  \t\t\t\t\t</li>\n  \t\t\t\t\t<li className=\"nav-button\">\n  \t\t\t\t\t\t<span className=\"material-icons\">mail</span>\n  \t\t\t\t\t\t<h5>Email</h5>\n  \t\t\t\t\t</li>\n  \t\t\t\t\t<li className=\"nav-button\">\n  \t\t\t\t\t\t<span className=\"material-icons\">folder</span>\n  \t\t\t\t\t\t<h5>File Shares</h5>\n  \t\t\t\t\t</li>\n  \t\t\t\t\t<li className=\"nav-button\">\n  \t\t\t\t\t\t<span className=\"material-icons\">wifi</span>\n  \t\t\t\t\t\t<h5>Networks</h5>\n  \t\t\t\t\t</li>\n  \t\t\t\t\t<li className=\"nav-button\">\n  \t\t\t\t\t\t<span className=\"material-icons\">storage</span>\n  \t\t\t\t\t\t<h5>Servers</h5>\n  \t\t\t\t\t</li>\n  \t\t\t\t</ul>\n  \t\t\t</nav>\n  \n  \t\t)\n  \t}\n  }\n  \n  class Topbar extends React.Component {\n  \tconstructor(props) {\n  \t\tsuper(props);\n  \t}\n  \n  \trender() {\n  \t\tconst allCompanies = this.props.companyList.map((item) =>\n  \t\t\t<option value={item.name}>{item.name}</option>\n  \t\t)  \n  \t\t\n  \t\treturn (\n  \t\t\t<div id=\"topbar\">\n  \t\t\t\t<div id=\"logo\">\n  \t\t\t\t\t<span className=\"material-icons\">pets</span>\n  \t\t\t\t\t<h1>Auri</h1>\n  \t\t\t\t</div>\n  \t\t\t\t<input type=\"text\" />\n  \t\t\t\t<select name=\"Dropdown\" id=\"Companies\" value=\"\" onChange={this.props.updateCompany}>\n  \t\t\t\t\t<option value=\"\">{this.props.companyName}</option>\n  \t\t\t\t\t{allCompanies}\n  \t\t\t\t</select>\n  \t\t\t\t<span class=\"material-icons\">\n  \t\t\t\t\taccount_circle\n  \t\t\t\t</span>\n  \t\t\t</div>\n  \t\t)\n  \t}\n  }\n  \n  //Articles Section\n  class Articles extends React.Component {\n  \tconstructor(props) {\n  \t\tsuper(props);\n  \t\tthis.state = {\n  \t\t\tnewTitle: \"\",\n  \t\t\tnewBody: \"\",\n  \t\t\tarticles: [],\n  \t\t\tcompanyName: this.props.companyName\n  \t\t};\n  \t\tthis.updateArticle = this.updateArticle.bind(this);\n  \t\tthis.handleTitleChange = this.handleTitleChange.bind(this);\n  \t\tthis.handleBodyChange = this.handleBodyChange.bind(this);\n  \t\tthis.fetchArticle = this.fetchArticle.bind(this);\n  \t}\n  \n  \thandleTitleChange(event) {\n  \t\tthis.setState({\n  \t\t\tnewTitle: event.target.value,\n  \t\t});\n  \t}\n  \n  \thandleBodyChange(event) {\n  \t\tthis.setState({\n  \t\t\tnewBody: event.target.value,\n  \t\t});\n  \t}\n  \n  \tfetchArticle() {\n  \t\tfetch(\"http://127.0.0.1:1313/companies/\" + this.state.companyName)\n  \t\t\t.then(res => res.json())\t\n  \t\t\t.then(res => this.setState({\n  \t\t\t\tarticles: res.articles\n  \t\t\t}))\n  \t};\n  \n  \tupdateArticle(event) {\n  \t\tevent.preventDefault();\n  \t\tconst requestOptions = {\n  \t\t\tmethod: \"POST\",\n  \t\t\theaders: {\"Content-Type\": \"application/json\"},\n  \t\t\tbody: JSON.stringify({company: this.props.companyName, title: this.state.newTitle, content: this.state.newBody})\n  \t\t};\n  \t\t\n  \t\tfetch(\"http://127.0.0.1:1313/companies/articles/\" + this.props.companyName, requestOptions)\n  \t\t\t.then(res => res.json())\n  \t\t\n  \t\tthis.setState({\n  \t\t\tarticles: [...this.state.articles,{title: this.state.newTitle,content:this.state.newBody}],\n  \t\t\tnewTitle: \"\",\n  \t\t\tnewBody: \"\"\n  \t\t});\t\t\t\n  \t};\n  \n  \tcomponentDidMount() {\n  \t\tthis.fetchArticle();\n  \t}\n  \n  \tcomponentWillReceiveProps(nextProps) {\n  \t\tthis.setState({ companyName: nextProps.companyName});  \n  \t}\n  \n  \tcomponentWillUpdate() {\n  \t\tthis.fetchArticle();\n  \t}\n  \n  \trender() {\n  \t\tconst article = this.state.articles.map((item,index) => \n  \t\t\t<div>\n  \t\t\t\t<h3 className=\"article-title\">\n  \t\t\t\t\t<a data-toggle=\"collapse\" data-target={\"#article-content-\"+ item.title.split(\" \").join(\"-\") + index.toString()} aria-expanded=\"false\" aria-controls={\"article-content-\" + item.title + index.toString()}>\n  \t\t\t\t\t\t{item.title}<span class=\"material-icons\">expand_more</span>\n  \t\t\t\t\t</a>\n  \t\t\t\t</h3>\n  \t\t\t\t<div class=\"collapse\" id={\"article-content-\" +item.title.split(\" \").join(\"-\") + index.toString()}>\n  \t\t\t\t\t<p>{item.content}</p>\n  \t\t\t\t</div>\n  \t\t\t</div>\t\n  \t\t)\n  \t\t\n  \t\treturn (\n  \t\t\t<div id=\"article-container\">\n  \t\t\t\t<form onSubmit={(event) => {this.updateArticle(event); this.props.fetchCompany()}}>\n  \t\t\t\t\t<input onChange={this.handleTitleChange} value={this.state.newTitle} type=\"text\" />\n  \t\t\t\t\t<textarea onChange={this.handleBodyChange} value={this.state.newBody} name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\n  \t\t\t\t\t<button type=\"submit\">Add new article</button>\n  \t\t\t\t</form>\n  \t\t\t\t<div id=\"articles\">\n  \t\t\t\t\t<ul>\n  \t\t\t\t\t\t{article}\n  \t\t\t\t\t</ul>\n  \t\t\t\t</div>\n  \t\t\t</div>\n  \n  \t\t)\n  \t}\n  }\n  \n  class Companies extends React.Component {\n  \tconstructor(props){\n  \t\tsuper(props);\n  \t\tthis.state = {\n  \t\t\tnewName: this.props.companyName\n  \t\t}\n  \t\t//this.updateCompanyName = this.updateCompanyName.bind(this);\n  \t\t//this.handleNameChange = this.handleNameChange.bind(this);\n  \t};\n  /*\n  \tupdateCompanyName(event) {\n  \t\tevent.preventDefault();\n  \t\tconst requestOptions = {\n  \t\t\tmethod: \"POST\",\n  \t\t\theaders: {\"Content-Type\": \"application/json\"},\n  \t\t\tbody: JSON.stringify({company: this.props.companyName, newName: this.state.newName})\n  \t\t};\n  \t\t\n  \t\tfetch(\"http://127.0.0.1:1313/companies/\" + this.props.companyName + \"/name\", requestOptions)\n  \t\t\t.then(res => res.json())\n  \t\t\n  \t\tthis.setState({\n  \t\t\tnewName: this.state.newName\n  \t\t});\n  \t\t\t\t\n  \t};\n  \n  \n  \thandleNameChange(event) {\n  \t\tthis.setState({\n  \t\t\tnewName: event.target.value,\n  \t\t});\n  \t};\n  */\n  render() {\n    const allCompanies = this.props.companyList.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"companyCard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"companyButtons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          value: item.name,\n          onClick: this.props.updateCompany,\n          children: \"Make Current\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 4\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"company-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"card-container\",\n        children: allCompanies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: event => {\n          this.updateCompanyName(event);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.props.handleNameChange,\n          value: this.props.newName,\n          placeholder: this.props.companyName,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.props.updateCompanyName,\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"newCompanyButton\",\n        className: \"btn btn-secondary btn-lg btn-block\",\n        children: \"Add new company\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 5\n      }, this)]\n    }, this.props.companyName, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/billy@high.t/Git/personal/aurora-docs/frontend/src/App.jsx"],"names":["React","$","Popper","App","Component","constructor","props","state","nav","companyName","newName","address","articles","router","subnet","ipAddr","vpn","companyList","fetchCompany","bind","updateCompany","changeNav","fetchAllCompanies","updateCompanyName","handleNameChange","fetch","then","res","json","setState","e","target","value","navValue","event","preventDefault","requestOptions","method","headers","body","JSON","stringify","company","render","allCompanies","map","item","name"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\n\n//Parent Component\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnav: \"companies\",\n\t\t\tcompanyName: \"\",\n\t\t\tnewName: \"\",\n\t\t\taddress: \"\",\n\t\t\tarticles: [],\n\t\t\trouter: {\n\t\t\t\tsubnet: \"\",\n\t\t\t\tipAddr: \"\",\n\t\t\t\tvpn: \"\"\n\t\t\t},\n\t\t\tcompanyList: []\n\t\t};\n\t\tthis.fetchCompany = this.fetchCompany.bind(this);\n\t\tthis.updateCompany = this.updateCompany.bind(this);\n\t\tthis.changeNav = this.changeNav.bind(this);\n\t\tthis.fetchAllCompanies = this.fetchAllCompanies.bind(this);\n\t\tthis.updateCompanyName = this.updateCompanyName.bind(this);\n\t\tthis.handleNameChange = this.handleNameChange.bind(this);\n\t\t\n\t};\n\n\tfetchCompany() {\n\t\tfetch(\"http://127.0.0.1:1313/companies/\" + this.state.companyName)\n\t\t\t.then(res => res.json())\t\n\t\t\t.then(res => this.setState({\n\t\t\t\taddress: res.address,\n\t\t\t\trouter: res.router\n\t\t\t}))\n\t};\n\n\tfetchAllCompanies() {\n\t\tfetch(\"http://127.0.0.1:1313/companies/\")\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => this.setState({\n\t\t\t\tcompanyList: res\n\t\t\t}))\n\t};\n\n\tupdateCompany(e) {\n\t\tthis.setState({\n\t\t\tcompanyName: e.target.value\n\t\t});\n\t};\n\n\tchangeNav(navValue) {\n\t\tthis.setState({\n\t\t\tnav: navValue\n\t\t});\n\t};\n\n\tupdateCompanyName(event) {\n\t\tevent.preventDefault();\n\t\tconst requestOptions = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\tbody: JSON.stringify({company: this.state.companyName, newName: this.state.newName})\n\t\t};\n\t\t\n\t\tfetch(\"http://127.0.0.1:1313/companies/\" + this.state.companyName + \"/name\", requestOptions)\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => this.setState({\n\t\t\t\tcompanyName: this.state.newName,\n\t\t\t\tnewName: \"\"\n\t\t\t}));\n\t};\n\n\n\thandleNameChange(event) {\n\t\tthis.setState({\n\t\t\tnewName: event.target.value,\n\t\t});\n\t};\n/*\n\tcomponentWillMount() {\n\t\tthis.fetchCompany();\n\t\tthis.fetchAllCompanies();\t\n\t};\n\n\tcomponentWillUpdate() {\n\t\tthis.fetchCompany();\n\t};\n\n\trender() {\n\n\t\tif (this.state.nav === \"companies\" || this.state.companyName === \"\") {\n\t\t\treturn (\n\t\t\t\t<div id=\"app-container\">\n\t\t\t\t\t<Navbar changeNav={this.changeNav} />\n\t\t\t\t\t<Topbar companyList={this.state.companyList} fetchAllCompanies={this.fetchAllCompanies} updateCompany={this.updateCompany} companyName={this.state.companyName}/>\n\t\t\t\t\t<div id=\"content-container\">\n\t\t\t\t\t\t<Companies handleNameChange={this.handleNameChange} newName={this.state.newName} updateCompanyName={this.updateCompanyName} companyList={this.state.companyList} fetchAllCompanies={this.fetchAllCompanies} updateCompany={this.updateCompany} companyName={this.state.companyName} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t \t)\n\t\t} else if (this.state.nav === \"articles\") {\n\t\t\treturn (\n\t\t\t\t<div id=\"app-container\">\n\t\t\t\t\t<Navbar changeNav={this.changeNav} />\n\t\t\t\t\t<Topbar companyList={this.state.companyList} fetchAllCompanies={this.fetchAllCompanies} updateCompany={this.updateCompany} companyName={this.state.companyName}/>\n\t\t\t\t\t<div id=\"content-container\">\t\t\t \t\t\n\t\t\t\t\t\t<Articles setState={this.setState} fetchCompany={this.fetchCompany} companyName={this.state.companyName} articles={this.state.articles}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t \t)\n\t\t}\n\t}\n};\n\n//Navbar\nclass Navbar extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<nav id=\"navbar\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li className=\"nav-button\" onClick={() => this.props.changeNav(\"companies\")}>\n\t\t\t\t\t\t<span className=\"material-icons\">business</span>\n\t\t\t\t\t\t<h5>Companies</h5>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"nav-button\" onClick={() => this.props.changeNav(\"articles\")}>\n\t\t\t\t\t\t<span className=\"material-icons\">book</span>\n\t\t\t\t\t\t<h5>Articles</h5>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"nav-button\">\n\t\t\t\t\t\t<span className=\"material-icons\">apps</span>\n\t\t\t\t\t\t<h5>Apps</h5>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"nav-button\">\n\t\t\t\t\t\t<span className=\"material-icons\">cloud_upload</span>\n\t\t\t\t\t\t<h5>Backup</h5>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"nav-button\">\n\t\t\t\t\t\t<span className=\"material-icons\">mail</span>\n\t\t\t\t\t\t<h5>Email</h5>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"nav-button\">\n\t\t\t\t\t\t<span className=\"material-icons\">folder</span>\n\t\t\t\t\t\t<h5>File Shares</h5>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"nav-button\">\n\t\t\t\t\t\t<span className=\"material-icons\">wifi</span>\n\t\t\t\t\t\t<h5>Networks</h5>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"nav-button\">\n\t\t\t\t\t\t<span className=\"material-icons\">storage</span>\n\t\t\t\t\t\t<h5>Servers</h5>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</nav>\n\n\t\t)\n\t}\n}\n\nclass Topbar extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\tconst allCompanies = this.props.companyList.map((item) =>\n\t\t\t<option value={item.name}>{item.name}</option>\n\t\t)  \n\t\t\n\t\treturn (\n\t\t\t<div id=\"topbar\">\n\t\t\t\t<div id=\"logo\">\n\t\t\t\t\t<span className=\"material-icons\">pets</span>\n\t\t\t\t\t<h1>Auri</h1>\n\t\t\t\t</div>\n\t\t\t\t<input type=\"text\" />\n\t\t\t\t<select name=\"Dropdown\" id=\"Companies\" value=\"\" onChange={this.props.updateCompany}>\n\t\t\t\t\t<option value=\"\">{this.props.companyName}</option>\n\t\t\t\t\t{allCompanies}\n\t\t\t\t</select>\n\t\t\t\t<span class=\"material-icons\">\n\t\t\t\t\taccount_circle\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n//Articles Section\nclass Articles extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnewTitle: \"\",\n\t\t\tnewBody: \"\",\n\t\t\tarticles: [],\n\t\t\tcompanyName: this.props.companyName\n\t\t};\n\t\tthis.updateArticle = this.updateArticle.bind(this);\n\t\tthis.handleTitleChange = this.handleTitleChange.bind(this);\n\t\tthis.handleBodyChange = this.handleBodyChange.bind(this);\n\t\tthis.fetchArticle = this.fetchArticle.bind(this);\n\t}\n\n\thandleTitleChange(event) {\n\t\tthis.setState({\n\t\t\tnewTitle: event.target.value,\n\t\t});\n\t}\n\n\thandleBodyChange(event) {\n\t\tthis.setState({\n\t\t\tnewBody: event.target.value,\n\t\t});\n\t}\n\n\tfetchArticle() {\n\t\tfetch(\"http://127.0.0.1:1313/companies/\" + this.state.companyName)\n\t\t\t.then(res => res.json())\t\n\t\t\t.then(res => this.setState({\n\t\t\t\tarticles: res.articles\n\t\t\t}))\n\t};\n\n\tupdateArticle(event) {\n\t\tevent.preventDefault();\n\t\tconst requestOptions = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\tbody: JSON.stringify({company: this.props.companyName, title: this.state.newTitle, content: this.state.newBody})\n\t\t};\n\t\t\n\t\tfetch(\"http://127.0.0.1:1313/companies/articles/\" + this.props.companyName, requestOptions)\n\t\t\t.then(res => res.json())\n\t\t\n\t\tthis.setState({\n\t\t\tarticles: [...this.state.articles,{title: this.state.newTitle,content:this.state.newBody}],\n\t\t\tnewTitle: \"\",\n\t\t\tnewBody: \"\"\n\t\t});\t\t\t\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.fetchArticle();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.setState({ companyName: nextProps.companyName});  \n\t}\n\n\tcomponentWillUpdate() {\n\t\tthis.fetchArticle();\n\t}\n\n\trender() {\n\t\tconst article = this.state.articles.map((item,index) => \n\t\t\t<div>\n\t\t\t\t<h3 className=\"article-title\">\n\t\t\t\t\t<a data-toggle=\"collapse\" data-target={\"#article-content-\"+ item.title.split(\" \").join(\"-\") + index.toString()} aria-expanded=\"false\" aria-controls={\"article-content-\" + item.title + index.toString()}>\n\t\t\t\t\t\t{item.title}<span class=\"material-icons\">expand_more</span>\n\t\t\t\t\t</a>\n\t\t\t\t</h3>\n\t\t\t\t<div class=\"collapse\" id={\"article-content-\" +item.title.split(\" \").join(\"-\") + index.toString()}>\n\t\t\t\t\t<p>{item.content}</p>\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t\t)\n\t\t\n\t\treturn (\n\t\t\t<div id=\"article-container\">\n\t\t\t\t<form onSubmit={(event) => {this.updateArticle(event); this.props.fetchCompany()}}>\n\t\t\t\t\t<input onChange={this.handleTitleChange} value={this.state.newTitle} type=\"text\" />\n\t\t\t\t\t<textarea onChange={this.handleBodyChange} value={this.state.newBody} name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\n\t\t\t\t\t<button type=\"submit\">Add new article</button>\n\t\t\t\t</form>\n\t\t\t\t<div id=\"articles\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{article}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t)\n\t}\n}\n\nclass Companies extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnewName: this.props.companyName\n\t\t}\n\t\t//this.updateCompanyName = this.updateCompanyName.bind(this);\n\t\t//this.handleNameChange = this.handleNameChange.bind(this);\n\t};\n/*\n\tupdateCompanyName(event) {\n\t\tevent.preventDefault();\n\t\tconst requestOptions = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\tbody: JSON.stringify({company: this.props.companyName, newName: this.state.newName})\n\t\t};\n\t\t\n\t\tfetch(\"http://127.0.0.1:1313/companies/\" + this.props.companyName + \"/name\", requestOptions)\n\t\t\t.then(res => res.json())\n\t\t\n\t\tthis.setState({\n\t\t\tnewName: this.state.newName\n\t\t});\n\t\t\t\t\n\t};\n\n\n\thandleNameChange(event) {\n\t\tthis.setState({\n\t\t\tnewName: event.target.value,\n\t\t});\n\t};\n*/\n\trender() {\n\t\tconst allCompanies = this.props.companyList.map((item) =>\n\t\t\t<div className=\"companyCard\">\n\t\t\t\t<h6>{item.name}</h6>\n\t\t\t\t<div className=\"companyButtons\">\n\t\t\t\t\t<button className=\"btn btn-success\" value={item.name} onClick={this.props.updateCompany}>Make Current</button>\t\t\t\t\n\t\t\t\t\t<button className=\"btn btn-danger\">Delete</button>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t)\n\n\t\treturn(\n\t\t\t\n\t\t\t<div key={this.props.companyName} className=\"company-container\">\n\t\t\t\t<div id=\"card-container\">\n\t\t\t\t\t{allCompanies}\n\t\t\t\t</div>\n\t\t\t\t<form onSubmit={(event) => {this.updateCompanyName(event)}}>\n\t\t\t\t\t<input onChange={this.props.handleNameChange} value={this.props.newName} placeholder={this.props.companyName} type=\"text\" />\n\t\t\t\t\t<button onClick={this.props.updateCompanyName} type=\"submit\" className=\"btn btn-primary\">Edit</button>\n\t\t\t\t</form>\n\t\t\t\t<button id=\"newCompanyButton\" className=\"btn btn-secondary btn-lg btn-block\">Add new company</button>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}